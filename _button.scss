.ip-btn-group {
    position: relative;
    @include make-row('flex');
    .ip-btn {
        flex: 0 0 auto;
        border-radius: 0;
        &:first-child {
            margin-right: -1px;
            border-bottom-left-radius: $input-btn-border-radius;
            border-top-left-radius: $input-btn-border-radius;
        }
        &:last-child {
            margin-left: -1px;
            border-bottom-right-radius: $input-btn-border-radius;
            border-top-right-radius: $input-btn-border-radius;
        }
        &:focus, &:active,
        &.focus, &.active {
            z-index: 1;
        }
    }
}

.ip-btn {
    display: inline-block;
    font-weight: $btn-font-weight;
    text-align: center;
    white-space: nowrap;
    vertical-align: middle;
    user-select: none;
    border: $btn-border-width solid transparent;
    @include button-size($btn-padding-y, $btn-padding-x, $font-size-base, $btn-line-height, $input-btn-border-radius);
    @include transition($btn-transition);

    @include hover-focus {
        text-decoration: none;
    }
    &:focus,
    &.focus {
        outline: 0;
        box-shadow: $btn-focus-box-shadow;
    }

    // Disabled comes first so active can properly restyle
    &.disabled,
    &:disabled {
        //opacity: $btn-disabled-opacity;
        @include box-shadow(none);
    }

    &:not(:disabled):not(.disabled) {
        cursor: pointer;
    }

    &:not(:disabled):not(.disabled):active,
    &:not(:disabled):not(.disabled).active {
        background-image: none;
        @include box-shadow($btn-active-box-shadow);

        &:focus {
            @include box-shadow($btn-focus-box-shadow, $btn-active-box-shadow);
        }
    }
    .iconfont {
        margin-right: 5px;
    }
}

a.ip-btn.disabled,
fieldset:disabled a.ip-btn {
    pointer-events: none;
}

@each $color, $value in $btn-colors {
    .ip-btn-#{$color} {
        @include button-variant(nth($value, 1), nth($value, 1));
    }
}
@each $color, $value in $btn-colors {
    .ip-btn-outline-#{$color} {
        @include button-outline-variant(nth($value, 1), nth($value, 2));
    }
}
//
// Link buttons
//

// Make a button look and behave like a link
.ip-btn-link {
    font-weight: $font-weight-normal;
    color: $link-color;
    background-color: transparent;
  
    @include hover {
        color: $link-hover-color;
        text-decoration: $link-hover-decoration;
        background-color: transparent;
        border-color: transparent;
    }
  
    &:focus,
    &.focus {
        text-decoration: $link-hover-decoration;
        border-color: transparent;
        box-shadow: none;
    }
  
    &:disabled,
    &.disabled {
        color: $btn-link-disabled-color;
    }
  
    // No need for an active state here
}
//
// Button Sizes
//

.ip-btn-lg {
    @include button-size($btn-padding-y-lg, $btn-padding-x-lg, $font-size-lg, $btn-line-height-lg, $input-btn-border-radius-lg);
}
  
.ip-btn-sm {
    @include button-size($btn-padding-y-sm, $btn-padding-x-sm, $font-size-sm, $btn-line-height-sm, $input-btn-border-radius-sm);
}

//
// Block button
//

.ip-btn-block {
    display: block;
    width: 100%;
  
    // Vertically space out multiple block buttons
    + .ip-btn-block {
        margin-top: $btn-block-spacing-y;
    }
}
  
// Specificity overrides
input[type="submit"],
input[type="reset"],
input[type="button"] {
    &.ip-btn-block {
        width: 100%;
    }
}
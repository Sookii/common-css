/// Grid system
//
// Generate semantic grid columns with these mixins.

@mixin make-container() {
    width: 100%;
    //padding-right: ($grid-gutter-width / 2);
    //padding-left: ($grid-gutter-width / 2);
    margin-right: auto;
    margin-left: auto;
}
  
@mixin make-row($type) {
    display: -webkit-box;      /* OLD - iOS 6-, Safari 3.1-6 */
    display: -moz-box;         /* OLD - Firefox 19- (buggy but mostly works) */
    display: -ms-flexbox;      /* TWEENER - IE 10 */
    display: -webkit-flex;     /* NEW - Chrome */
    display: flex;
    @if($type == 'row') {
        flex-wrap: wrap;
    }
}

@mixin make-flex-grow($grows) {
    -webkit-box-flex: #{$grows};
    -moz-box-flex: #{$grows};
    -ms-flex: #{$grows};
    -webkit-flex: #{$grows} 1 0;
    flex: #{$grows} 1 0;
}

@mixin make-vertical-row() {
    -webkit-flex-flow: column;
    -moz-flex-flow: column;
    -ms-flex-flow: column;
    flex-flow: column;
}
  
@mixin make-col($size, $columns: $grid-columns) {
    flex: 0 0 percentage($size / $columns);
    // Add a `max-width` to ensure content within each column does not blow out
    // the width of the column. Applies to IE10+ and Firefox. Chrome and Safari
    // do not appear to require this.
    max-width: percentage($size / $columns);
}
  
@mixin make-col-offset($size, $columns: $grid-columns) {
    $num: $size / $columns;
    margin-left: if($num == 0, 0, percentage($num));
}
  
@mixin make-grid-columns($columns: $grid-columns, $gutter: $grid-gutter-width) {
    %grid-column {
        position: relative;
        width: 100%;
        min-height: 1px; // Prevent columns from collapsing when empty
        //padding-right: ($gutter / 2);
        //padding-left: ($gutter / 2);
    }

    @for $i from 1 through $columns {
        .col-#{$i} {
            @extend %grid-column;
        }
    }
    .col,
    .col-auto {
        @extend %grid-column;
    }
    .col {
        flex-basis: 0;
        flex-grow: 1;
        max-width: 100%;
    }
    .col-auto {
        flex: 0 0 auto;
        width: auto;
        max-width: none; // Reset earlier grid tiers
    }
    //col
    @for $i from 1 through $columns {
        .col-#{$i} {
            @include make-col($i, $columns);
        }
    }
    //offset 
    @for $i from 0 through ($columns - 1) {
        @if not ($i == 0) { // Avoid emitting useless .offset-0
            .offset-#{$i} {
                @include make-col-offset($i, $columns);
            }
        }
    }
}
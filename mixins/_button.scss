// Button sizes
@mixin button-size($padding-y, $padding-x, $font-size, $line-height, $border-radius) {
    padding: $padding-y $padding-x;
    font-size: $font-size;
    line-height: $line-height;
    // Manually declare to provide an override to the browser default
    @if $enable-rounded {
        border-radius: $border-radius;
    } @else {
        border-radius: 0;
    }
}

@mixin button-variant($background, $border, $hover-background: lighten($background, 15%), $hover-border: lighten($border, 15%), $active-background: darken($background, 15%), $active-border: darken($border, 15%)) {
    color: color-yiq($background);
    @include gradient-bg($background);
    border-color: $border;
    @include box-shadow($btn-box-shadow);

    @include hover {
        color: color-yiq($background);
        @include gradient-bg($hover-background);
        border-color: $hover-border;
    }
    
    &:focus,
    &.focus {
        @if $enable-shadows {
            box-shadow: $btn-box-shadow, 0 0 0 $btn-focus-width rgba($border, .5);
        } @else {
            box-shadow: 0 0 0 $btn-focus-width rgba($border, .5);
        }
    }

    &.disabled,
    &:disabled {
        color: rgba(color-yiq($background), .8);
        background-color: rgba($background, .65);
        border-color: rgba($border, .65);
        cursor: not-allowed;
    }

    &:not(:disabled):not(.disabled):active,
    &:not(:disabled):not(.disabled).active {
        color: color-yiq($active-background);
        background-color: $active-background;
        @if $enable-gradients {
            background-image: none; // Remove the gradient for the pressed/active state
        }
        border-color: $active-border;
    }
}

@mixin button-outline-variant($color, $color-hover, $active-border: $color-hover) {
    color: $color;
    background-color: transparent;
    background-image: none;
  
    &:hover {
        color: $color-hover;
        //background-color: $active-background;
        border-color: $active-border;
    }
  
    &:focus,
    &.focus {
        color: $color-hover;
        border-color: $active-border;
        box-shadow: 0 0 0 $btn-focus-width rgba($color-hover, .5);
    }
  
    &.disabled,
    &:disabled {
        color: rgba(0, 0, 0, .3);
        border-color: rgba(0, 0, 0, .2);
        background-color: rgba(0, 0, 0, .05);
        cursor: not-allowed;
    }
  
    &:not(:disabled):not(.disabled):active,
    &:not(:disabled):not(.disabled).active {
        color: $color-hover;
        border-color: $active-border;
    }

    @if ($color == $default) {
        border-color: $gray-400;
        &.extend-danger {
            &:hover {
                color: $danger;
                border-color: $danger;
            }
            &:focus,
            &.focus {
                color: $danger;
                border-color: $danger;
                box-shadow: 0 0 0 $btn-focus-width rgba($danger, .5);
            }
            &:not(:disabled):not(.disabled):active,
            &:not(:disabled):not(.disabled).active {
                color: $danger;
                border-color: $danger;
            }
        }
    } @else {
        border-color: $color;
    }

}